type 'a rose = Node of 'a * 'a rose list

(*

Code generated with grok prompt: What does this ocaml code do: 

type 'a rose = Node of 'a * 'a rose list 

(* Source for accumulator: https://ocaml.org/docs/loops-recursion*)
let rec size rose accum =
match Node with
| [] -> []
| x -> accum size x

*)

(* Source for accumulator: https://ocaml.org/docs/loops-recursion*)
let rec size rose accum =
  match rose with
  | Node (_, children) ->
      List.fold_left (fun acc child -> size child acc) (accum + 1) children



(*
Code generated with grok with prompt:
 What does this ocaml do to a rose tree: 
let rec map rose f =
  match rose with
  | Node (x, children) -> Node (f x, map children)
*)

let rec map rose f =
  match rose with
  | Node (x, children) -> Node (f x, List.map (fun child -> map child f) children)

(* 
Code generated with grok via prompt: What is wrong with this ocaml code for folding a rose tree:
 let rec fold a b =
  match a with
  | Node (x, childrenx) -> 
    match b with
    | Node (y, childreny) -> Node (x y, fold childrenx childreny)
*)

let rec fold f a b =
  match a, b with
  | Node (x, childrenX), Node (y, childrenY) -> Node (f x y, List.map2 (fold f ) childrenX childrenY)


let testRose1 = Node (1, [Node(2, [Node (3, [])])])
let testRose2 = Node (4, [Node(5, [Node (6, [])])])

let testSize = size testRose1 0


(*test case from Grok from map prompt*)
let double x = x * 2
let testMap = map testRose1 double


let add x y = x + y
let testFold = fold add testRose1 testRose2


(*code generated by grok via prompt: how to print a rose tree in ocaml*)
let rec print_rose to_string rose =
  match rose with
  | Node (value, children) ->
      let children_str =
        match children with
        | [] -> ""
        | _ -> "[" ^ String.concat "; " (List.map (print_rose to_string) children) ^ "]"
      in
      Printf.sprintf "Node(%s, %s)" (to_string value) children_str


let () = 
print_int testSize; print_newline();
print_endline (print_rose string_of_int testMap);
print_endline (print_rose string_of_int testFold);